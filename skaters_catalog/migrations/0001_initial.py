# Generated by Django 3.2.9 on 2022-05-09 22:51

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='element',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор элемента', primary_key=True, serialize=False)),
                ('name_element', models.CharField(max_length=200)),
                ('description_element', models.TextField(max_length=10000, null=True)),
                ('price', models.TextField(max_length=1000, null=True)),
                ('history', models.TextField(max_length=10000, null=True)),
                ('video_element', models.TextField(max_length=1000, null=True)),
            ],
            options={
                'ordering': ['name_element'],
            },
        ),
        migrations.CreateModel(
            name='skater',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор спортсмена', primary_key=True, serialize=False)),
                ('name_skater', models.CharField(max_length=100)),
                ('patronymic_skater', models.CharField(max_length=100)),
                ('surname_skater', models.CharField(max_length=100)),
                ('sex_skater', models.CharField(max_length=100)),
                ('date_of_birth_skater', models.CharField(max_length=100)),
                ('biography_skater', models.TextField(max_length=10000, null=True)),
                ('characteristic_skater', models.TextField(max_length=10000, null=True)),
                ('achievements', models.TextField(max_length=10000, null=True)),
                ('photo_skater', models.TextField(max_length=1000, null=True)),
            ],
            options={
                'ordering': ['name_skater', 'surname_skater'],
            },
        ),
        migrations.CreateModel(
            name='trainer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор тренера', primary_key=True, serialize=False)),
                ('name_trainer', models.CharField(max_length=100)),
                ('patronymic_trainer', models.CharField(max_length=100)),
                ('surname_trainer', models.CharField(max_length=100)),
                ('sex_trainer', models.CharField(choices=[('ж', 'женский'), ('м', 'мужской')], max_length=1, null=True)),
                ('date_of_birth_trainer', models.TextField(max_length=100)),
                ('biography_trainer', models.TextField(max_length=10000, null=True)),
                ('career_trainer', models.TextField(max_length=10000, null=True)),
                ('school', models.TextField(max_length=1000, null=True)),
                ('photo_trainer', models.TextField(max_length=1000, null=True)),
            ],
            options={
                'ordering': ['name_trainer', 'surname_trainer'],
            },
        ),
        migrations.CreateModel(
            name='skater_trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dates_together', models.TextField(max_length=1000, null=True)),
                ('skater_id', models.ManyToManyField(to='skaters_catalog.skater')),
                ('trainer_id', models.ManyToManyField(to='skaters_catalog.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='skater_element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=10000, null=True)),
                ('video', models.TextField(max_length=1000, null=True)),
                ('date', models.TextField(max_length=100)),
                ('competition', models.TextField(max_length=10000)),
                ('element_id', models.ManyToManyField(to='skaters_catalog.element')),
                ('skater_id', models.ManyToManyField(to='skaters_catalog.skater')),
            ],
        ),
    ]
